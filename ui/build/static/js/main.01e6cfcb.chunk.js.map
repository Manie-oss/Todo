{"version":3,"sources":["Login.js","Apptodo.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","username","password","details","setLoginDetails","isloggedin","to","className","type","placeholder","onChange","e","target","value","onClick","logincredentials","axios","post","then","response","resback","data","catch","error","console","log","setIsLoggedIn","logIn","Todo","inputtext","area","setArea","name","resback1","savenote","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iQAuEeA,MAlEf,SAAeC,GAEb,MAAmCC,mBAAS,CAC1CC,SAAU,GACVC,SAAU,KAFZ,mBAAOC,EAAP,KAAgBC,EAAhB,KA2CA,OAAwB,IAArBL,EAAMM,WAEL,cAAC,IAAD,CAAUC,GAAK,UAMf,sBAAKC,UAAY,MAAjB,UACE,iCACA,uBAAOC,KAAO,OAAOC,YAAc,WAAWC,SAhDpD,SAAqBC,GACnBP,EAAgB,2BAAID,GAAL,IAAcF,SAAUU,EAAEC,OAAOC,YAgD5C,uBAAOL,KAAO,WAAWC,YAAc,WAAWC,SA7CxD,SAAyBC,GACvBP,EAAgB,2BAAID,GAAL,IAAcD,SAAUS,EAAEC,OAAOC,YA6C5C,wBAAQL,KAAO,SAASM,QAAW,kBAzBlBC,EAyBsCZ,OAxB3Da,IAAMC,KAAK,mCAAoCF,GAC9CG,MAAK,SAACC,GAAD,OACJf,GAAgB,8BAAC,eACZD,GADW,IAEdiB,QAASD,EAASE,aAGrBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAThB,IAAuBR,GAyBjB,oBACA,wBAAQP,KAAO,SAASM,QAAW,kBA3CzC,SAAeX,GACba,IAAMC,KAAK,8BAA+Bd,GACzCe,MAAK,SAACC,GACLf,GAAgB,8BAAC,eACZD,GADW,IAEdiB,QAASD,EAASE,UAEC,qBAAlBF,EAASE,MAEVtB,EAAM2B,eAAc,MAGvBJ,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA8B+BI,CAAMxB,IAA/C,sBAEA,8BAAMA,EAAQiB,c,MCvBPQ,MArCf,SAAc7B,GAEV,MAAwBC,mBAAS,CAC7B6B,UAAW,KADf,mBAAOC,EAAP,KAAaC,EAAb,KAkBA,OAAIhC,EAAMM,WAQF,sBAAKE,UAAU,OAAf,UACI,0BAAUA,UAAY,MAAME,YAAc,aAAauB,KAAO,OAAOtB,SAvBjF,SAA0BC,GACtBoB,EAAQ,2BAAID,GAAL,IAAWD,UAAWlB,EAAEC,OAAOC,YAuB9B,wBAAQL,KAAO,SAASM,QAAW,kBApB/C,SAAkBgB,GACdd,IAAMC,KAAK,6BAA8Ba,GACxCZ,MAAK,SAACC,GACHY,EAAQ,2BAAID,GAAL,IAAWG,SAAUd,EAASE,WAExCC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAciCW,CAASJ,IAAlD,qBARJ,cAAC,IAAD,CAAUxB,GAAK,YCNZ6B,MAhBf,WAEI,MAAoCnC,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBqB,EAAnB,KAEA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAO,SAApB,SACI,cAAC,EAAD,CAAOhC,WAAcA,EAAYqB,cAAiBA,MAEtD,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAO,QAApB,SACI,cAAC,EAAD,CAAMhC,WAAcA,UCHrBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.01e6cfcb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Redirect } from 'react-router-dom';\n\nfunction Login(props) {\n\n  const [details, setLoginDetails] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function changedName(e){\n    setLoginDetails({...details, username: e.target.value});\n  }\n\n  function changedPassword(e){\n    setLoginDetails({...details, password: e.target.value});\n  }\n\n  function logIn(details){\n    axios.post(\"http://localhost:8080/login\", details)\n    .then((response) => {\n      setLoginDetails(()=>({\n        ...details,\n        resback: response.data,\n      }));\n      if(response.data === 'Login Successful')\n      {\n        props.setIsLoggedIn(true);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  function createAccount(logincredentials){\n    axios.post(\"http://localhost:8080/newaccount\", logincredentials)\n    .then((response) => \n      setLoginDetails(() => ({\n        ...details,\n        resback: response.data,\n     }))\n    )\n    .catch((error) => {\n      console.log(error);\n    });\n  }\n\n  if(props.isloggedin === true){\n    return(\n      <Redirect to = '/todo' />\n    )\n  }\n\n  else{\n    return (\n      <div className = \"App\">\n        <form>\n        <input type = \"text\" placeholder = \"UserName\" onChange = {changedName} />\n        <input type = \"password\" placeholder = \"Password\" onChange = {changedPassword} />\n        <button type = \"button\" onClick = {() => createAccount(details)}>SignUp</button>\n        <button type = \"button\" onClick = {() => logIn(details)}>LogIn</button>\n        </form>\n        <div>{details.resback}</div>\n      </div>\n    );    \n  }\n}\n\nexport default Login;\n\n\n","import React ,{ useState } from 'react';\nimport axios from 'axios';\nimport './Apptodo.css'\nimport { Redirect } from 'react-router-dom';\n\nfunction Todo(props){\n\n    const [area, setArea] = useState({\n        inputtext: \"\"\n    });\n\n    function changedInputText(e){\n        setArea({...area, inputtext: e.target.value});\n    }\n\n    function savenote(area){\n        axios.post('http://localhost:8080/save', area)\n        .then((response) => {\n            setArea({...area, resback1: response.data,})\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n    }\n\n    if(!props.isloggedin){\n        return(\n            <Redirect to = '/login' />\n        )\n    }\n\n    else{\n        return(\n            <div className=\"todo\">\n                <textarea className = \"txt\" placeholder = \"Add a note\" name = \"body\" onChange = {changedInputText} />\n                <button type = \"button\" onClick = {() => savenote(area)}>Save</button>\n            </div>\n    \n        )\n    }\n}\n\nexport default Todo;","import React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport Todo from \"./Apptodo\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App()\n{\n    const [isloggedin, setIsLoggedIn] = useState(false);\n\n    return(\n        <Switch>\n            <Route exact path = \"/login\">\n                <Login isloggedin = {isloggedin} setIsLoggedIn = {setIsLoggedIn}/>\n            </Route>\n            <Route exact path = '/todo'>\n                <Todo isloggedin = {isloggedin} />\n            </Route>\n        </Switch>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}